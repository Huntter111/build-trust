<!-- Стилі для body -->
<style>
	.lock body {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}
	.loading body {
		visibility: hidden;
		opacity: 0;
		background-color: #000;
	}
	.loaded body {
		transition: opacity 0.5s ease 0s;
		opacity: 1;
		visibility: visible;
	}
</style>
<div id="fls-preloader">
	<!-- Документація: https://template.fls.guru/template-docs/modul-preloader.html -->
	<!-- Стилі для прелоадера -->
	<style>
		* {
			padding: 0px;
			margin: 0px;
			border: 0px;
		}
		*,
		*:before,
		*:after {
			box-sizing: border-box;
		}
		html {
			overflow: hidden;
			touch-action: none;
			overscroll-behavior: none;
		}
		/* Головний блок */
		.fls-preloader {
			pointer-events: none;
			z-index: -1;
			position: fixed;
			width: 100%;
			height: 100%;
			top: 0;
			left: 0;
			display: flex;
			justify-content: center;
			align-items: center;
		}
		/* Блок з елементами */
		.fls-preloader__body {
			padding: 0.93rem;
			max-width: 31.25rem;
			display: flex;
			flex-direction: column;
		}
		/* Блок з лічильником */
		.fls-preloader__counter {
			font-size: 10rem;
		}
		/* Прогресбар */
		.fls-preloader__line {
		}
		/* Лінія прогресбару */
		.fls-preloader__line span {
			display: inline-block;
			transition: width 0.2s ease;
			height: 0.8rem;
			background-color: #7a956b;
		}
		.text-blob {
			/* color: #fff; */

			/* background-color: #000; */
			/* padding: 20px; */
			/* border-radius: 10px; */
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -100%);
		}
		.fade-in {
			animation: fadeIn ease 0.1s; /* Змінено тривалість на дуже мале значення, щоб анімація спрацювала миттєво */
			-webkit-animation: fadeIn ease 4s;
			-moz-animation: fadeIn ease 4s;
			-o-animation: fadeIn ease 4s;
			-ms-animation: fadeIn ease 4s;
		}
		.fade-out {
			animation: fadeOut ease 0.1s;
			-webkit-animation: fadeOut ease 5s;
			-moz-animation: fadeOut ease 5s;
			-o-animation: fadeOut ease 5s;
			-ms-animation: fadeOut ease 5s;
		}

		@keyframes fadeIn {
			0% {
				opacity: 0;
				color: #333; /* Додайте колір, щоб текст був чорний спочатку */
			}
			100% {
				opacity: 1;
				color: #fff; /* Змініть колір на білий під час появи тексту */
			}
		}

		@-moz-keyframes fadeIn {
			0% {
				opacity: 0;
				color: #000;
			}
			100% {
				opacity: 1;
				color: #fff;
			}
		}

		@-webkit-keyframes fadeIn {
			0% {
				opacity: 0;
				color: #000;
			}
			100% {
				opacity: 1;
				color: #fff;
			}
		}

		@-o-keyframes fadeIn {
			0% {
				opacity: 0;
				color: #000;
			}
			100% {
				opacity: 1;
				color: #fff;
			}
		}

		@-ms-keyframes fadeIn {
			0% {
				opacity: 0;
				color: #000;
			}
			100% {
				opacity: 1;
				color: #fff;
			}
		}
	</style>
	<script async>
		function preloader() {
			const preloaderImages = document.querySelector('[data-preloader]')
				? document.querySelectorAll('[data-preloader] img')
				: document.querySelectorAll('img');
			const preloaderContainer = document.querySelector('#fls-preloader');

			if (preloaderImages.length) {
				const preloaderTemplate = `
						<div class="fls-preloader">
							 <div class="fls-preloader__body">
								  <div class="text-blob">BUILD TRUST</div>
							 </div>
						</div>`;
				document.querySelector('html').insertAdjacentHTML('beforeend', preloaderTemplate);

				const preloader = document.querySelector('.fls-preloader'),
					htmlDocument = document.documentElement;

				let imagesLoadedCount = 0;

				htmlDocument.classList.add('loading');
				htmlDocument.classList.add('lock');

				preloaderImages.forEach((preloaderImage) => {
					const imgClone = document.createElement('img');
					if (imgClone) {
						imgClone.onload = imageLoaded;
						imgClone.onerror = imageLoaded;
						preloaderImage.dataset.src
							? (imgClone.src = preloaderImage.dataset.src)
							: (imgClone.src = preloaderImage.src);
					}
				});

				function imageLoaded() {
					imagesLoadedCount++;
					if (imagesLoadedCount >= preloaderImages.length) {
						setTimeout(addLoadedClass, 3500); // Add delay here
					}
				}

				function addLoadedClass() {
					htmlDocument.classList.add('loaded');
					htmlDocument.classList.remove('lock');
					htmlDocument.classList.remove('loading');
					setTimeout(() => {
						// Add delay here
						preloader.remove();
						preloaderContainer.remove();
					}, 500);
				}
			} else {
				preloaderContainer.remove();
			}

			// Text Animator
			class TextAnimator {
				constructor(selector, options) {
					this.text = document.querySelector(selector);
					this.strText = this.text.textContent.trim();
					this.splitText = this.strText.split('');
					this.text.textContent = '';
					this.options = options || {};
					this.margin = this.options.margin || '0px';
					this.delay = this.options.delay || 0;
					this.class = this.options.class || 'text-span';
				}

				animate() {
					for (let i = 0; i < this.splitText.length; i++) {
						if (this.splitText[i] === ' ') {
							this.text.innerHTML += '&nbsp;';
						} else {
							this.text.innerHTML +=
								"<span class='" +
								this.class +
								"' style='margin-right:" +
								this.margin +
								';animation-delay:' +
								i * this.delay +
								"ms;'><span class='fade-in' style='animation-delay:" +
								i * this.delay +
								"ms;'>" +
								this.splitText[i] +
								'</span></span>';
						}
					}
				}
			}

			const animator = new TextAnimator('.text-blob', {
				margin: '5px',
				delay: 80,
				class: 'text-blob__letter',
			});
			animator.animate();
		}

		preloader();
	</script>
	<!-- Скріпт прелоадера -->
	<!-- <script async>
		function preloader() {
			const preloaderImages = document.querySelector('[data-preloader]')
				? document.querySelectorAll('[data-preloader] img')
				: document.querySelectorAll('img');
			const preloaderContainer = document.querySelector('#fls-preloader');
			if (preloaderImages.length) {
				const preloaderTemplate = `
					<div class="fls-preloader">
						<div class="fls-preloader__body">
							<div class="text-blob">BUILD TRUST</div>
						</div>
					</div>`;
				document.querySelector('html').insertAdjacentHTML('beforeend', preloaderTemplate);

				const preloader = document.querySelector('.fls-preloader'),
					htmlDocument = document.documentElement;

				let imagesLoadedCount = 0;

				htmlDocument.classList.add('loading');
				htmlDocument.classList.add('lock');

				preloaderImages.forEach((preloaderImage) => {
					const imgClone = document.createElement('img');
					if (imgClone) {
						imgClone.onload = imageLoaded;
						imgClone.onerror = imageLoaded;
						preloaderImage.dataset.src
							? (imgClone.src = preloaderImage.dataset.src)
							: (imgClone.src = preloaderImage.src);
					}
				});

				function imageLoaded() {
					imagesLoadedCount++;
					if (imagesLoadedCount >= preloaderImages.length) {
						setTimeout(addLoadedClass, 3500); // Add delay here
					}
				}
				function addLoadedClass() {
					htmlDocument.classList.add('loaded');
					htmlDocument.classList.remove('lock');
					htmlDocument.classList.remove('loading');
					setTimeout(() => {
						// Add delay here
						preloader.remove();
						preloaderContainer.remove();
					}, 500);
				}
			} else {
				preloaderContainer.remove();
			}
		}
		preloader();
	</script> -->
	<!-- Скріпт анімації  -->
	<!-- <script async>
		class TextAnimator {
			constructor(selector, options) {
				this.text = document.querySelector(selector);
				this.strText = this.text.textContent.trim();
				this.splitText = this.strText.split('');
				this.text.textContent = '';
				this.options = options || {};
				this.margin = this.options.margin || '0px';
				this.delay = this.options.delay || 0;
				this.class = this.options.class || 'text-span';
			}

			animate() {
				for (let i = 0; i < this.splitText.length; i++) {
					if (this.splitText[i] === ' ') {
						this.text.innerHTML += '&nbsp;';
					} else {
						this.text.innerHTML +=
							"<span class='" +
							this.class +
							"' style='margin-right:" +
							this.margin +
							';animation-delay:' +
							i * this.delay +
							"ms;'><span class='fade-in' style='animation-delay:" +
							i * this.delay +
							"ms;'>" +
							this.splitText[i] +
							'</span></span>';
					}
				}
			}
		}

		const animator = new TextAnimator('.text-blob', {
			margin: '5px',
			delay: 80,
			class: 'text-blob__letter',
		});
		animator.animate();
	</script> -->
</div>
